USE [TaxesDB]
GO

IF EXISTS (SELECT * FROM sysobjects WHERE id = object_id(N'SPR_GET_TAX_PAY_PER_MONTH'))
    DROP PROCEDURE [dbo].[SPR_GET_TAX_PAY_PER_MONTH]
GO

SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[SPR_GET_TAX_PAY_PER_MONTH](
	@P_DOC_CUIT_NUMBER VARCHAR(MAX)
)
AS

/*

EXEC [dbo].[SPR_GET_TAX_PAY_PER_MONTH]
	@P_DOC_CUIT_NUMBER = '(046714469,640748343,703886155,885054189,140002126,160005990,570005538)'

*/
BEGIN
	SET NOCOUNT ON;
	
	EXEC ( '
		WITH TAXPAYERS AS (
		SELECT [ID_ENTITY_PK_FK],
			   [ID_ENTITY_TYPE_PK_FK],
			   [DOCUMENT_NUMBER] AS [DOC_CUIT_NUMBER]
		  FROM [dbo].[INDIVIDUALS] WITH(NOLOCK)
		 UNION ALL
		SELECT [ID_ENTITY_PK_FK],
			   [ID_ENTITY_TYPE_PK_FK],
			   [CUIT_NUMBER]
		  FROM [dbo].[COMPANIES] WITH(NOLOCK)
		),
		TAX_PAYMENTS_INFO AS (
		SELECT TP.[ID_TAXPAYER_ENTITY_FK] AS [ID_TAXPAYER_ENTITY],
			   T.[ID_ENTITY_TYPE_PK_FK] AS [ID_ENTITY_TYPE],
			   T.[DOC_CUIT_NUMBER],
			   YEAR(TP.[DT_PAYMENT]) AS [PAYMENT_YEAR],
			   MONTH(TP.[DT_PAYMENT]) AS [PAYMENT_MONTH],
			   TP.[AMOUNT]
		  FROM TAXPAYERS T
		  JOIN dbo.[TAX_PAYMENTS] TP WITH(NOLOCK) ON TP.[ID_TAXPAYER_ENTITY_FK] = T.[ID_ENTITY_PK_FK]
		 WHERE T.DOC_CUIT_NUMBER IN '+@P_DOC_CUIT_NUMBER+'
		 )
		 SELECT [ID_TAXPAYER_ENTITY],
				[ID_ENTITY_TYPE],
				[DOC_CUIT_NUMBER],
				[PAYMENT_YEAR],
				[PAYMENT_MONTH],
				SUM([AMOUNT]) TOTAL_MONTH_AMOUNT
		   FROM TAX_PAYMENTS_INFO
		  GROUP BY [ID_TAXPAYER_ENTITY],
				   [ID_ENTITY_TYPE],
				   [DOC_CUIT_NUMBER],
				   [PAYMENT_YEAR],
				   [PAYMENT_MONTH]
		  ORDER BY [ID_TAXPAYER_ENTITY] ASC,
				   [PAYMENT_YEAR] ASC,
				   [PAYMENT_MONTH] ASC
		   ');

	SET NOCOUNT OFF;
END;


GO


IF EXISTS (SELECT * FROM sysobjects WHERE id = object_id(N'SPR_GET_OWNERS_COMPANIES_TOTAL_TAX_PAID'))
    DROP PROCEDURE [dbo].[SPR_GET_OWNERS_COMPANIES_TOTAL_TAX_PAID]
GO

SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[SPR_GET_OWNERS_COMPANIES_TOTAL_TAX_PAID](
	@P_DOCUMENT_NUMBER VARCHAR(MAX)
)
AS

/*

EXEC [dbo].[SPR_GET_OWNERS_COMPANIES_TOTAL_TAX_PAID]
	@P_DOCUMENT_NUMBER = '(640748343,058324562,422927717,885054189)'

*/
BEGIN
	SET NOCOUNT ON;
	
	EXEC ( '
		SELECT I.[ID_ENTITY_PK_FK] AS [ID_OWNER_ENTITY],
			   I.[DOCUMENT_NUMBER],
			   I.[FULL_NAME],
			   C.[ID_ENTITY_PK_FK],
			   C.[CUIT_NUMBER],
			   ISNULL(SUM(TP.[AMOUNT]), 0) AS [TOTAL_TAX_PAID]
		  FROM [dbo].[INDIVIDUALS] I WITH(NOLOCK)
		  JOIN [dbo].[COMPANY_OWNERS] CO WITH(NOLOCK) ON CO.[ID_OWNER_ENTITY_PK_FK] = I.[ID_ENTITY_PK_FK]
		  JOIN [dbo].[COMPANIES] C WITH(NOLOCK) ON C.[ID_ENTITY_PK_FK] = CO.[ID_COMPANY_ENTITY_PK_FK]
	 LEFT JOIN [dbo].[TAX_PAYMENTS] TP WITH(NOLOCK) ON TP.[ID_TAXPAYER_ENTITY_FK] = C.[ID_ENTITY_PK_FK]
		 WHERE I.[DOCUMENT_NUMBER] IN '+@P_DOCUMENT_NUMBER+'
		   AND TP.[DT_PAYMENT] < GETDATE()
		 GROUP BY I.[ID_ENTITY_PK_FK],
				  I.[DOCUMENT_NUMBER],
				  I.[FULL_NAME],
				  C.[ID_ENTITY_PK_FK],
				  C.[CUIT_NUMBER]
		   ');

	SET NOCOUNT OFF;
END;


GO

IF EXISTS (SELECT * FROM sysobjects WHERE id = object_id(N'SPR_ADD_COMPANY'))
    DROP PROCEDURE [dbo].[SPR_ADD_COMPANY]
GO

SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[SPR_ADD_COMPANY](
	@P_CUIT_NUMBER       VARCHAR(20),
    @P_DT_COMMENCEMENT   DATE,
    @P_WEBSITE           VARCHAR(200) = NULL,
    @P_OWNERS			 VARCHAR(100),
    @P_ADDRESS           VARCHAR(200) = NULL,
    @P_EMAIL             VARCHAR(50) = NULL,
    @P_ID_PHONE_TYPE	 INT = NULL,
    @P_PHONE_NUMBER      VARCHAR(50) = NULL
)
AS

/*

EXEC [dbo].[SPR_ADD_COMPANY] 
    @P_CUIT_NUMBER       = '520002286',
    @P_DT_COMMENCEMENT   = '2010-05-21',
    @P_WEBSITE           = 'nonos.eu',
    @P_OWNERS			 = '10,5',
    @P_ADDRESS           = '77 Herzi Street - Washington 02484',
    @P_EMAIL             = 'contact@nonos.eu',
    @P_ID_PHONE_TYPE	 = 1,
    @P_PHONE_NUMBER      = '8846927702'

*/
BEGIN
	SET NOCOUNT ON;

	DECLARE @V_ID_ENTITY INT;

	BEGIN TRY
		BEGIN TRAN
	
			INSERT INTO [dbo].[ENTITIES](
						[ID_ENTITY_TYPE_FK],
						[ADDRESS],
						[EMAIL])
				VALUES (
						2,                
						@P_ADDRESS,
						@P_EMAIL);
				
			SELECT @V_ID_ENTITY = IDENT_CURRENT( '[ENTITIES]' );

			IF EXISTS (SELECT 1 FROM PHONE_TYPE WHERE ID_PHONE_TYPE_PK = @P_ID_PHONE_TYPE)
			BEGIN
				
				INSERT INTO [dbo].[PHONES](
							[ID_ENTITY_FK],
							[ID_PHONE_TYPE_FK],
							[PHONE_NUMBER])
					VALUES(
							@V_ID_ENTITY,
							@P_ID_PHONE_TYPE,
							@P_PHONE_NUMBER);
			END

			INSERT INTO [dbo].[COMPANIES](
						[ID_ENTITY_PK_FK],
						[ID_ENTITY_TYPE_PK_FK],
						[CUIT_NUMBER],
						[DT_COMMENCEMENT],
						[WEBSITE])
				VALUES(
						@V_ID_ENTITY,
						2,
						@P_CUIT_NUMBER,
						@P_DT_COMMENCEMENT,
						@P_WEBSITE);

			INSERT INTO [dbo].[COMPANY_OWNERS](
						[ID_COMPANY_ENTITY_PK_FK],
						[ID_OWNER_ENTITY_PK_FK])
				 SELECT @V_ID_ENTITY,
						SPLIT.TEMP.value('.', 'VARCHAR(100)')
				   FROM (
							SELECT CAST('<X>'+REPLACE(@P_OWNERS, ',', '</X><X>')+'</X>' AS XML) AS STRING
						) AS TEMP
						CROSS APPLY STRING.nodes('/X') AS SPLIT(TEMP);
		COMMIT;
	END TRY
    BEGIN CATCH

        IF ( @@TRANCOUNT > 0 )
			ROLLBACK;

        DECLARE @V_ERROR_MESSAGE VARCHAR(4000);

		SET @V_ERROR_MESSAGE = ERROR_MESSAGE();

		RAISERROR(@V_ERROR_MESSAGE, 18, 1);

    END CATCH;
	SET NOCOUNT OFF;
END;


GO

IF EXISTS (SELECT * FROM sysobjects WHERE id = object_id(N'SPR_ADD_TAX_PAYMENTS'))
    DROP PROCEDURE [dbo].[SPR_ADD_TAX_PAYMENTS]
GO

SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[SPR_ADD_TAX_PAYMENTS](
	@P_ID_TAX_TYPE        INT,
    @P_ID_AGENCY_ENTITY   INT,
    @P_ID_TAXPAYER_ENTITY INT,
    @P_DT_PAYMENT         DATE,
    @P_AMOUNT			  DECIMAL(12,2)
)
AS

/*

EXEC [dbo].[SPR_ADD_TAX_PAYMENTS] 
    @P_ID_TAX_TYPE        = 3,
    @P_ID_AGENCY_ENTITY   = 17,
    @P_ID_TAXPAYER_ENTITY = 13,
    @P_DT_PAYMENT         = '2020-08-13',
    @P_AMOUNT			  = 1997.13

*/
BEGIN
	SET NOCOUNT ON;

	BEGIN TRY
		IF NOT EXISTS (SELECT 1 FROM [dbo].[TAX_TYPE] WHERE [ID_TAX_TYPE_PK] = @P_ID_TAX_TYPE)
		BEGIN
			RAISERROR('#EXCEPTION: Invalid tax type! Please select a valid tax type.',18,1);
			RETURN
		END
		ELSE IF NOT EXISTS (SELECT 1 FROM [dbo].[AGENCIES] WHERE [ID_ENTITY_PK_FK] = @P_ID_AGENCY_ENTITY)
		BEGIN
			RAISERROR('#EXCEPTION: Invalid agency! Please select a valid agency.',18,1);
			RETURN
		END
		ELSE IF NOT EXISTS (SELECT 1 FROM [dbo].[ENTITIES] WHERE [ID_ENTITY_PK] = @P_ID_TAXPAYER_ENTITY AND [ID_ENTITY_TYPE_FK] IN (1,2))
		BEGIN
			RAISERROR('#EXCEPTION: Invalid taxpayer! Please select a valid taxpayer.',18,1);
			RETURN
		END
		ELSE IF NOT ISNULL(@P_AMOUNT,0) > 0
		BEGIN
			RAISERROR('#EXCEPTION: Invalid amount! Please enter a amount greater than zero.',18,1);
			RETURN
		END

		INSERT INTO [dbo].[TAX_PAYMENTS](
					[ID_TAX_TYPE_FK],
					[ID_AGENCY_ENTITY_FK],
					[ID_TAXPAYER_ENTITY_FK],
					[DT_PAYMENT],
					[AMOUNT])
			 VALUES (
					@P_ID_TAX_TYPE,
					@P_ID_AGENCY_ENTITY,
					@P_ID_TAXPAYER_ENTITY,
					@P_DT_PAYMENT,
					@P_AMOUNT);
	END TRY
    BEGIN CATCH

        IF ( @@TRANCOUNT > 0 )
			ROLLBACK;

        DECLARE @V_ERROR_MESSAGE VARCHAR(4000);

		SET @V_ERROR_MESSAGE = ERROR_MESSAGE();

		RAISERROR(@V_ERROR_MESSAGE, 18, 1);

    END CATCH;
	SET NOCOUNT OFF;
END;


GO